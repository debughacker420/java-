import java.io.*;
import java.util.Scanner;

class Employee implements Serializable {
    int id;
    String name;
    String designation;
    double salary;

    Employee(int id, String name, String designation, double salary) {
        this.id = id;
        this.name = name;
        this.designation = designation;
        this.salary = salary;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Designation: " + designation + ", Salary: " + salary;
    }
}

public class EmployeeManagement {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String filename = "employees.dat";

        while (true) {
            System.out.println("\n--- Employee Management ---");
            System.out.println("1. Add Employee");
            System.out.println("2. Display All Employees");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter Employee ID: ");
                    int id = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter Employee Name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter Designation: ");
                    String designation = sc.nextLine();
                    System.out.print("Enter Salary: ");
                    double salary = sc.nextDouble();
                    sc.nextLine();

                    Employee emp = new Employee(id, name, designation, salary);

                    // Append employee object to file
                    try (FileOutputStream fos = new FileOutputStream(filename, true);
                         AppendableObjectOutputStream oos = new AppendableObjectOutputStream(fos)) {
                        oos.writeObject(emp);
                        System.out.println("Employee added successfully.");
                    } catch (IOException e) {
                        System.out.println("Error writing to file: " + e.getMessage());
                    }
                    break;

                case 2:
                    // Read all employee objects
                    try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename))) {
                        System.out.println("\n--- Employee Records ---");
                        while (true) {
                            Employee e = (Employee) ois.readObject();
                            System.out.println(e);
                        }
                    } catch (EOFException e) {
                        // End of file reached
                    } catch (FileNotFoundException e) {
                        System.out.println("No employee records found.");
                    } catch (IOException | ClassNotFoundException e) {
                        System.out.println("Error reading file: " + e.getMessage());
                    }
                    break;

                case 3:
                    System.out.println("Exiting...");
                    sc.close();
                    System.exit(0);

                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }
}

// Custom ObjectOutputStream to append objects
class AppendableObjectOutputStream extends ObjectOutputStream {
    public AppendableObjectOutputStream(OutputStream out) throws IOException {
        super(out);
    }

    @Override
    protected void writeStreamHeader() throws IOException {
        // Do not write header when appending
        reset();
    }
}
